/*一般情况下，数组名被解释为数组第一个元素的地址，该规则有例外：
1、数组声明使用数组名标记存储位置
2、对数组名使用sizeof()运算符得到的是整个数组的长度*/

/*数组地址和数组首地址的区别：数组首地址指的是数组第一个元素的地址；数组地址和数组首地址的值是相同的，
但对数组首地址进行加1操作时得到数组第二个元素的地址，但对数组地址进行加1操作时得到最后一个元素后面的地址*/
#include<iostream>
using namespace std;
int main() {
	int arr1[3] = { 10,20,90 };
	int arr3[3] = { 87,90,87 };
	cout << "数组arr1的首地址是" << &arr1[0] << endl;
	cout << "数组arr1地址是" << &arr1 << endl;
	
	
	int* p = &arr1[0];/*声明指针P指向数组首地址*/
	int(p2)[3];/*声明指针p2指向一个3个元素的数组的整个地址*/
	/*声明一个存储整个数组地址的指针的语法（虽然整个数组的地址与数组的首地址在值上相同，但是对指向整个数组的指针进行加减操作时所得到的结果与对指向数组首地址的指针进行加减操作所
	得到的结果是不相同的）：
	指针类型（指针名）[数组元素数];*/
	cout << "测试p2指向的地址,直接输出p2的地址" << p2 << endl;
	cout << "输出arr3的首地址："<<&arr3[0] << endl;
	cout << "给arr1+1,输出其结果：" << arr1 + 1 << endl;
	cout << "直接输出arr3" << arr3 << endl;
	cout << "输出arr3的整个地址" <<&arr3 <<endl;


	
	
	return 0;
}
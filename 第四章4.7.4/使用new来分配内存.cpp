#include <iostream>;
using namespace std;
int main()
{
	/*指针的重要作用在于，在运行阶段分配未命名的内存以存储值*/
	/*C语言中，一般通过库函数malloc来分配内存，C++中也是可行的*/
	/*C++中分配内存的方法是用new运算符*/

	int* jk = new int;
	*jk = 1001;
	cout << "int value = " << *jk << ": location = " << jk << endl;

	int higgens;
	int* pt = &higgens;
	cout << "size of pt = " << sizeof(pt) << endl;
	cout << ": size of *pt = " << sizeof(*pt) << endl;
	/*在以上两种情况中，第一种只能通过指针访问，第二种可以通过名称higgens来访问*/

	/*为一个数据对象（该术语类似于变量，但比变量更通用，变量也是数据对象）获得并指定分配内存的通用格式为：类型名*指针名=new 类型名
	第一个类型名指定了该指针是指向哪种数据类型的，第二个类型名是指定new寻找适合存储该类型数据的内存的*/
	/*如何将new用于两种不同的类型*/
	int nights = 1001;
	cout << "nights value = " << nights << endl;
	cout << "nights location= " << &nights << endl;

	double* pd = new double;
	*pd = 10000001.0;
	cout << "double value = " << *pd;
	cout << "location = " << pd << endl;
	cout << "location of pointer pd: " << &pd << endl;
	cout << "size of pd = " << sizeof pd << endl;
	cout << "size of *pd = " << sizeof(*pd) << endl;

	return 0;
	/*new分配的内存与常规变量声明分配的内存块不同，用new为变量nights和pd所寻找的内存地址位于被称为栈的内存区域中
	而常规变量声明的值被存储在被称为堆的内存区域或自由存储区中，栈和堆的讨论将在以后进行*/
	/*计算机可能因没有足够的内存而无法满足new的需求，在较老的编译器中，new将返回
	0，在C++中，值为0的指针被称为空指针，空指针不会指向有效的数据，其常被用来表示
	运算符或函数失败*/

	/*空指针和野指针
	1.空类型指针
首先什么是空类型呢，空类型就是void，自然，空类型指针就是void *
	1.1、空类型指针的作用
void * 可以指向任何类型对象的地址，表示这是一个指针，和地址值有关，但不知道存储在此地址上的对象的类型，所以在取空类型指针所指向的值的时候，应将空类型指针转换为对应的指针类型
	1.2、空类型指针的例子：
	int a = 10;
	char b = 'a';
	float c = 12.0;
	void *pa = &a;
	void *pb = &b;
	void *pc = &c;
	int aa = (int)(*pa); //引发错误
	int aa = *((int*)pa);//上一行代码应改为此行代码，里面的括号（int*）表示将空类型指针pa强转为int型指针，外面这个括号还外加一个*号，表示取该int型指针所指向的值，就是先对指针
	进行强制类型转换，然后再对指针进行解引用，进而得到值，再赋给变量。所有的空指针想要解引用必须进行指针类型的强制转换
	1.3.1空指针支持的操作
	a. 与另一个指针比较
	b. 向函数传递void *指针
	c. 在函数里返回void *指针
	d. 给另一个void *指针赋值
	1.3.2、空指针不支持的操作
	a. 不支持解引用，不能获取指向对象的值
	b. 不能进行指针运算，比如移位操作
	2、野指针
	2.1、什么是野指针：指向一个非法的已经销毁的内存的指针，会对系统造成不可预估的错误
	2.2、野指针的出现
		 指针变量没有被初始化，没有将地址赋给指针时，指针处于野指针的状态；
		 当一个指针被free或delete后，只是把指针所指的内存释放掉了，没有改变指针的值，此时的指针也是野指针
	2.2.1、小知识：free()和delete()的区别
		   free()是C的库函数，用于释放运行时分配的内存，其原型最早在stdlib.h中声明，语法是free(pointer_name);
		   delete是C++特有的运算符，同样用于释放运行时分配的内存，语法是 delete pointer_name;
		   这两者的功能差不多，性质不一样，一个是库函数，一个是运算符，但是delete在理论上运行速度快，因为运算符总是
		   比库函数快，这也是C++相对于C进步的地方，用运算符取代了库函数，并实现相同的效果
	2.3、使野指针合法化
		 使用malloc()函数，其全称是memory allocation，中文全名叫做动态内存分配，用于申请一块连续的指定大小的内存块区域，
		 当无法知道内存具体位置的时候，想要绑定真正的内存空间，就需要用到动态的分配内存。
		 char *pd=(char*)malloc(100);//malloc()函数的返回值并不是十六进制的地址，不能直接将返回值赋给指针，而应该对指针进行强制
		 类型转换
*/
}